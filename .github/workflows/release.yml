name: Release

on:
  release:
    types: [published]

jobs:
  build:
    if: ${{ !github.event.release.prerelease }}
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Wait for tests to complete
        run: |
          echo "Checking if tests have completed for release ${{ github.event.release.tag_name }}..."
          # Check if there's a successful test run for the main branch (where the release was created from)
          LATEST_TEST_RUN=$(gh run list --workflow=Tests --branch=main --status=success --limit=1 --json databaseId,headSha,conclusion --jq '.[0]')
          if [ "$LATEST_TEST_RUN" = "null" ]; then
            echo "No successful test run found for main branch"
            exit 1
          fi
          echo "Latest successful test run found: $LATEST_TEST_RUN"
          echo "Tests completed successfully"

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.25"

      - name: Download dependencies
        run: go mod download

      - name: Build all binaries
        env:
          VERSION: ${{ github.event.release.tag_name }}
        run: make build-all

      - name: Upload Linux amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/hora-linux-amd64
          asset_name: hora-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Linux arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/hora-linux-arm64
          asset_name: hora-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload Linux 386
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/hora-linux-386
          asset_name: hora-linux-386
          asset_content_type: application/octet-stream

      - name: Upload Darwin amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/hora-darwin-amd64
          asset_name: hora-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload Darwin arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/hora-darwin-arm64
          asset_name: hora-darwin-arm64
          asset_content_type: application/octet-stream

